CCS PCH C Compiler, Version 4.124, 5967               29-Oct-12 10:18

               Filename: Z:\media\windows\Users\cuki\Eletronica\Projetos\I2CGit\I2C\escravo.lst

               ROM used: 684 bytes (2%)
                         Largest free fragment is 32080
               RAM used: 30 (2%) at main() level
                         41 (3%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   0222
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.3
0056:  GOTO   0060
005A:  BTFSC  F9E.3
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * escravo.c 
....................  * 
....................  *  Created on: Oct 24, 2012 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include <18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
....................  
.................... #fuses	HS,NOOSCSEN,NOPUT,NOBROWNOUT,NOWDT,NOSTVREN,NOLVP 
.................... #fuses	NODEBUG,NOPROTECT,NOCPB,NOCPD,NOWRT,NOWRTC,NOWRTB 
.................... #fuses	NOWRTD,NOEBTR,NOEBTRB 
....................  
.................... #use delay(clock=8MHz) 
.................... #use rs232(xmit=pin_c6, rcv=pin_c7, baud=9600, parity=E, stop=1) 
*
010C:  MOVLW  08
010E:  MOVWF  01
0110:  CLRF   25
0112:  MOVFF  24,00
0116:  MOVF   00,W
0118:  XORWF  25,F
011A:  RRCF   00,F
011C:  DECFSZ 01,F
011E:  BRA    0116
0120:  BTFSS  F9E.4
0122:  BRA    0120
0124:  MOVLW  FE
0126:  ANDWF  FAC,F
0128:  BTFSC  25.0
012A:  BSF    FAC.0
012C:  MOVFF  24,FAD
0130:  RETURN 0
.................... #use i2c(slave, scl=pin_c3, sda=pin_c4, fast=2000000, force_hw, address=0xB0) 
....................  
.................... static int primeiraLeitura, segundaLeitura, terceiraLeitura, print; 
....................  
.................... #int_ssp 
.................... void ssp_interrupt() { 
*
00AE:  CLRF   27
00B0:  BTFSC  FC7.5
00B2:  BRA    00BA
00B4:  CLRF   1D
00B6:  BTFSC  FC7.2
00B8:  BSF    1D.7
00BA:  MOVF   1D,W
00BC:  INCF   1D,F
00BE:  MOVWF  28
....................  
.................... 	register int lido = 0; 
.................... 	register int estado = i2c_isr_state(); 
....................  
.................... 	if (estado < 0x80) { 
00C0:  MOVF   28,W
00C2:  SUBLW  7F
00C4:  BNC   0100
.................... 		lido = i2c_read(); 
00C6:  BCF    FC6.6
00C8:  BTFSS  F9E.3
00CA:  BRA    00C8
00CC:  MOVF   FC9,W
00CE:  BSF    FC6.4
00D0:  MOVWF  27
.................... 		if (estado == 1) { //primeira leitura 
00D2:  DECFSZ 28,W
00D4:  BRA    00E0
.................... 			primeiraLeitura = lido; 
00D6:  MOVFF  27,19
.................... 			print = 1; 
00DA:  MOVLW  01
00DC:  MOVWF  1C
.................... 		} else if (estado == 2) { //segunda leitura 
00DE:  BRA    00FE
00E0:  MOVF   28,W
00E2:  SUBLW  02
00E4:  BNZ   00F0
.................... 			segundaLeitura = lido; 
00E6:  MOVFF  27,1A
.................... 			print = 2; 
00EA:  MOVLW  02
00EC:  MOVWF  1C
.................... 		} else if (estado == 3) { //terceira leitura 
00EE:  BRA    00FE
00F0:  MOVF   28,W
00F2:  SUBLW  03
00F4:  BNZ   00FE
.................... 			terceiraLeitura = lido; 
00F6:  MOVFF  27,1B
.................... 			print = 3; 
00FA:  MOVLW  03
00FC:  MOVWF  1C
.................... 		} 
.................... 	} else if (estado == 0x80) { 
00FE:  BRA    0106
0100:  MOVF   28,W
0102:  SUBLW  80
0104:  BNZ   0106
.................... 	} 
.................... } 
....................  
0106:  BCF    F9E.3
0108:  GOTO   0060
.................... int main(void) { 
*
0222:  CLRF   FF8
0224:  BCF    FD0.7
0226:  BSF    07.7
0228:  CLRF   FEA
022A:  CLRF   FE9
022C:  MOVLW  0C
022E:  MOVWF  FAF
0230:  MOVLW  E2
0232:  MOVWF  FAC
0234:  MOVLW  D0
0236:  MOVWF  FAB
0238:  BSF    F94.3
023A:  BSF    F94.4
023C:  MOVLW  B0
023E:  MOVWF  FC8
0240:  MOVLW  36
0242:  MOVWF  FC6
0244:  MOVLW  03
0246:  MOVWF  1D
0248:  BSF    FC1.0
024A:  BSF    FC1.1
024C:  BSF    FC1.2
024E:  BCF    FC1.3
0250:  CLRF   19
0252:  CLRF   1A
0254:  CLRF   1B
0256:  CLRF   1C
.................... 	enable_interrupts(INT_SSP); 
0258:  BSF    F9D.3
.................... 	enable_interrupts(GLOBAL); 
025A:  MOVLW  C0
025C:  IORWF  FF2,F
.................... 	while (true) { 
.................... 		switch (print) { 
025E:  MOVF   1C,W
0260:  XORLW  03
0262:  BZ    026E
0264:  XORLW  01
0266:  BZ    028A
0268:  XORLW  03
026A:  BZ    029A
026C:  BRA    02A4
.................... 		case 3: 
.................... 			printf("\t\t\t%d", terceiraLeitura); 
026E:  MOVLW  09
0270:  MOVWF  24
0272:  RCALL  010C
0274:  MOVLW  09
0276:  MOVWF  24
0278:  RCALL  010C
027A:  MOVLW  09
027C:  MOVWF  24
027E:  RCALL  010C
0280:  MOVFF  1B,1E
0284:  MOVLW  1F
0286:  MOVWF  1F
0288:  RCALL  015A
.................... 		case 2: 
.................... 			printf("\t%d", segundaLeitura); 
028A:  MOVLW  09
028C:  MOVWF  24
028E:  RCALL  010C
0290:  MOVFF  1A,1E
0294:  MOVLW  1F
0296:  MOVWF  1F
0298:  RCALL  015A
.................... 		case 1: 
.................... 			printf("%d", primeiraLeitura); 
029A:  MOVFF  19,1E
029E:  MOVLW  1F
02A0:  MOVWF  1F
02A2:  RCALL  015A
.................... 		default: 
.................... 			print = 0; 
02A4:  CLRF   1C
.................... 			break; 
02A6:  BRA    02A8
.................... 		} 
.................... 	} 
02A8:  BRA    025E
.................... 	return 0; 
02AA:  MOVLW  00
02AC:  MOVWF  01
.................... } 
02AE:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0080   NOSTVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
